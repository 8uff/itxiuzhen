今天完成的事情：
任务5用flexbox实现。
明天计划的事情：（一定要写非常细致的内容） 
遇到的问题：（遇到什么困难，怎么解决的） 
收获：
http://www.css88.com/archives/5744
http://www.css88.com/demo/flexbox-playground/
flexbox模型：flex布局由被称为 flex container（flex容器） 的父容器 和被称为 flex item（flex项）的直接子元素构成。

浏览器对最新flexbox规范的支持情况：
Chrome 29+
Firefox 28+
Internet Explorer 11+
Opera 17+
Safari 6.1+ (加前缀 -webkit-)
Android 4.4+
iOS 7.1+ (加前缀 -webkit-)
目前解决flexbox版本兼容性问题，一般可以使用Autoprefixer后处理程序来实现css3代码自动补全；
如果你使用 Sass，也可以使用 @mixin （混入）来解决 flexbox版本兼容，推荐一个github项目：sass-flex-mixin。

以下情况应该尽量避免使用 Flexbox 布局：
整体页面布局
完全支持旧浏览器的网站

flexbox使用：
父级HTML元素上设置display: flex; 或内联使用display: inline-flex;

Flexbox container 属性:

flex-direction：row（默认）;| row-reverse;| column;| column-reverse;
这个属性通过设置 flex container（flex容器） 的主轴方向，来指定 flex item（flex项） 在 flex container（flex容器） 中是如何布局的。flex item（flex项） 可以在两个主轴方向上排列布局，水平横向和垂直纵向两种。

flex-wrap：nowrap(默认);| wrap;| wrap-reverse;
默认情况下，flexbox 理念是将容器中的所有子元素设置在一行中。flex-wrap属性可以控制 flex container（flex容器） 以单行还是多行布局其flex item（flex项），以及在新行上的排列方向。

flex-flow：row nowrap;（默认）
个属性是设置flex-direction和flex-wrap属性的速记写法（简写或缩写）。

justify-content：felx-start;（默认）| flex-end;| center;| space-between;| space-around;
用来指定 flex item（flex项）在当前 flex container（flex容器）主轴线（main axis）上的对齐方式。当所有flex item（flex项）都在同一行并且不可伸缩，或是可伸缩但已经达到它们最大尺寸的时候，它可以分配主轴线（main axis）上的剩余空间。

align-items:stretch（默认）(填满整个 flex container（flex容器）的高度（或宽度）);| flex-start; | flex-end;|center; | baseline(flex item（flex项）会按照她们的文本基线（baseline多数字母排列的基准线）对齐。);
flex item（flex项）可以在 flex container（flex容器）的当前交叉轴（cross axis）上对齐方式，类似于justify-content，但是在垂直方向。
填满整个 flex container（flex容器）的宽度的情况：
当 flex-direction:column; 或者 flex-direction:column-reverse;时，将flex item（flex项）的宽度设置auto或者100%就可以了。

align-content：stretch（默认）;| flex-start; | flex-end;center; | space-between;space-around;
当flex container（flex容器）的交叉轴（cross axis）上存在多余空间（未被填充满）时，align-content 属性可以控制 flex item（flex项）在 flex container（flex容器）的交叉轴（cross axis）上的对齐方式。类似于justify-content在主轴（main axis）方向上各个 flex item（flex项）的对齐。
注意：这个属性只有当 flex container（flex容器）有多行 flex item（flex项）时才生效，如果只有一行，那么这个属性没有效果。

flex item（flex项）的属性:

order: 0(默认)；| <number>;
order属性用来控制 flex container（flex容器）中 flex item（flex项）的排列顺序。

flex-grow: 0(默认)；| <number>;
当 flex container（flex容器）存在剩余空间时，可以用flex-grow这个属性来确定 flex item（flex项）的拉伸比例。

flex-shrink：1(默认)；| 0(不收缩)；| <number>;
当 flex container（flex容器）空间不足时，可以用flex-shrink这个属性来确定 flex item（flex项）的收缩比例。

flex-basis：1(默认)；| auto(存在问题)；| <number>;
这个属性看作width和height属性相同的值，并在 flex 伸缩比例分配剩余空间之前，指定 flex item（flex项）的初始主要大小（ flex-grow 和 flex-shrink 伸缩比例分配剩余空间之前）。

flex: 1 1 auto(auto)；| 0 0 auto（none）；|  [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]；
这个属性是flex-grow，flex-shrink和flex-basis属性的速记写法（简写或缩写）。 除了其他值，它也可以设置为auto(即：1 1 auto)和none(即：0 0 auto)。

align-self: auto； | flex-start； | flex-end； | center； | baseline； | stretch;
align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。